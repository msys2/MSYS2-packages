# This PKGBUILD is derived from one found on the AUR and includes patches contributed by gisburn.
pkgname=ksh93
pkgver=1.0.10
pkgrel=1
pkgdesc="The Original ATT Korn Shell, Now Maintained By The Community."
arch=('i686' 'x86_64')
url="https://www.github.com/ksh93/ksh"
license=('spdx:EPL-2.0')
makedepends=(
	'gcc'
  'gettext'	
  'gettext-devel'
	'ncurses-devel'
	'gmp-devel'
	'mpfr-devel'
	'mpc-devel'
	'isl-devel'
)
# There exists already a package that provides ksh.exe, mksh, so I will set this to be a conflict.
# Unless there can be a convincing reason to let both packages be installed.
conflicts=('mksh')

source=("${pkgname}-${pkgver}.zip"::https://github.com/ksh93/ksh/archive/refs/tags/v1.0.10.zip
	'ksh.kshrc'
  'ksh-mamake.patch'
  'ksh-unc-paths.patch')

sha256sums=('ab412118ce9527c6d805335080593fa874a0b859e9229c172f3fcf55d26f92e9'
	'SKIP'
  'b92aa2a8bd801b6f0a6c30013d1e6c13597d2de799ddc6c244b155aacb76d5e9'
  '4838b950e32fc61dbfbb5e446570f4f7503f302a26305dff1f9b0769585a94bc')

prepare() {
  cd "${srcdir}/ksh-${pkgver}"
  patch -p1 -i ../ksh-mamake.patch
  patch -p1 -i ../ksh-unc-paths.patch
}

# Things might get a bit messary, prepare yourselves.
# I really should use gisburn's kshrc default config.
build() {
	cd "${srcdir}/ksh-${pkgver}"
  
  	# For now, it literally fails if cc1.exe is not explicitly on the PATH.
  	local GCC_DIR="/usr/lib/gcc/x86_64-pc-msys/13.3.0" 
  	export PATH="$PATH:$GCC_DIR"
	export CYGWIN='ntsec'

	# Additional weird workaround.
	export CFLAGS="-I${GCC_DIR}/include -L${GCC_DIR} -L/usr/lib"
	export CCFLAGS="${CFLAGS} -fno-use-linker-plugin"
	export LIBRARY_PATH="${GCC_DIR}"

	# What the build system does by default is
	# entirely a shell script system. It sets 'chmod +x' to the script
	# but that does nothing with windows. Need to append
	# shebang at the start.
	sed -i '1s/^/#!\/usr\/bin\/bash\n/' src/cmd/INIT/mamprobe.sh
	sed -i '6s/^/#undef _lib_iconv_open\n/' src/lib/libast/features/iconv # Without this, fails with libiconv installed.

	CC="/usr/bin/gcc" /usr/bin/bash bin/package make PACKAGEROOT="$PWD" HOSTTYPE="cygwin.i386" || true


}

package() {
	cd "${srcdir}"
	install -dm0755 "${pkgdir}/etc/skel"
	install -dm0755 "${pkgdir}/usr/share/ksh"
	install -dm0755 "${pkgdir}/usr/share/doc/ksh"
	install -dm0755 "${pkgdir}/usr/share/licenses/ksh"

	# Install the core components of ksh93
	cd "${srcdir}/ksh-${pkgver}"
	CC="/usr/bin/gcc" /usr/bin/bash bin/package install "${pkgdir}/usr" PACKAGEROOT="$PWD"

	# install ksh sample rc file
	install -Dm644 "${srcdir}/ksh.kshrc" "${pkgdir}/etc/ksh.kshrc"

	# Install copyright and license files
	install -Dm0644 LICENSE.md "${pkgdir}/usr/share/licenses/ksh/LICENSE.md"
	install -Dm0644 COPYRIGHT "${pkgdir}/usr/share/licenses/ksh/COPYRIGHT"

	local _docs
	for _docs in 'builtins.mm' 'COMPATIBILITY' 'DESIGN' 'OBSOLETE' 'PROMO.mm' 'README' 'README-AUDIT.md' \
		'RELEASE' 'RELEASE88' 'RELEASE93' 'sh.memo' 'TYPES'; do
	install -Dm0644 "src/cmd/ksh93/${_docs}" "${pkgdir}/usr/share/doc/ksh/${_docs}"
done

	# Because ksh.exe, like mksh, provided by this package and often people want to specify ksh93,
 	# I will make a copy of of the ksh executable naming it ksh93.exe.
 	cp "${pkgdir}/usr/bin/ksh.exe" "${pkgdir}/usr/bin/ksh93.exe"
   
	# Lastly, move ksh-specific /usr/share/fun to /usr/share/ksh/functions
	mv "${pkgdir}/usr/share/fun" "${pkgdir}/usr/share/ksh/functions"

 	

}
